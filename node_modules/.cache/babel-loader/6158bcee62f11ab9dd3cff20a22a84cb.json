{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Utkarsh\\\\Downloads\\\\Projects\\\\starter_kit-master\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n                console.log(window.web3);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts, networkId, networkData, marketplace;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                console.log(accounts);\n                this.setState({\n                  account: accounts[0]\n                });\n                _context3.next = 8;\n                return web3.eth.net.getId();\n\n              case 8:\n                networkId = _context3.sent;\n                networkData = Marketplace.networks[networkId];\n\n                if (networkData) {\n                  marketplace = web3.eth.Contract(Marketplace.abi, networkData.address);\n                  console.log(marketplace);\n                  this.setState({\n                    marketplace: marketplace\n                  });\n                  this.setState({\n                    loading: false\n                  });\n                } else {\n                  window.alert('Marketplace contract not deployed to detect network');\n                }\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '',\n      productCount: 0,\n      products: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.loading ? React.createElement(\"div\", {\n        id: \"loader\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Loading...\")) : React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Utkarsh\\Downloads\\Projects\\starter_kit-master\\src\\components\\App.js"],"names":["React","Component","Web3","logo","Marketplace","Navbar","Main","App","loadWeb3","loadBlockchainData","console","log","window","web3","ethereum","enable","currentProvider","alert","eth","getAccounts","accounts","setState","account","net","getId","networkId","networkData","networks","marketplace","Contract","abi","address","loading","props","state","productCount","products"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport logo from '../logo.png';\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json';\nimport Navbar from './Navbar';\nimport Main from './Main';  \n\nclass App extends Component {\n\n  async componentWillMount(){\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    console.log(window.web3);\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData(){\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    console.log(accounts);\n    this.setState({ account : accounts[0]});\n\n    const networkId = await web3.eth.net.getId();\n    const networkData = Marketplace.networks[networkId];\n    \n    if(networkData){\n      const marketplace = web3.eth.Contract(Marketplace.abi,networkData.address);\n      console.log(marketplace);\n      this.setState({marketplace:marketplace});\n      this.setState({loading: false});\n    }\n    else{\n      window.alert('Marketplace contract not deployed to detect network');\n    }\n   \n  }\n\n  constructor(props){\n    super(props);\n    this.state={\n      account:'',\n      productCount:0,\n      products:[],\n      loading:true\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <Navbar account={this.state.account}/>\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 d-flex\">\n            {this.state.loading \n              ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>: <Main/>}\n          </main>  \n        </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}